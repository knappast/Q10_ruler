/* Generated By:JJTree&JavaCC: Do not edit this line. PLE_ParserConstants.java */
package se.kaskware.q10.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PLE_ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 7;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 8;
  /** RegularExpression Id. */
  int HEX_LITERAL = 9;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 10;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 11;
  /** RegularExpression Id. */
  int EXPONENT = 12;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 13;
  /** RegularExpression Id. */
  int STRING_LITERAL = 14;
  /** RegularExpression Id. */
  int NUMBER = 15;
  /** RegularExpression Id. */
  int PRODUCT = 16;
  /** RegularExpression Id. */
  int DOCUMENTATION = 17;
  /** RegularExpression Id. */
  int VERSION = 18;
  /** RegularExpression Id. */
  int SLOGAN = 19;
  /** RegularExpression Id. */
  int DESCRIPTION = 20;
  /** RegularExpression Id. */
  int CHANGEITEMS = 21;
  /** RegularExpression Id. */
  int AUTHOR = 22;
  /** RegularExpression Id. */
  int WHEN = 23;
  /** RegularExpression Id. */
  int LOB = 24;
  /** RegularExpression Id. */
  int PRODLINE = 25;
  /** RegularExpression Id. */
  int RULE = 26;
  /** RegularExpression Id. */
  int DATADICTION = 27;
  /** RegularExpression Id. */
  int COEFFICIENT = 28;
  /** RegularExpression Id. */
  int LAGRET = 29;
  /** RegularExpression Id. */
  int COM = 30;
  /** RegularExpression Id. */
  int GTT = 31;
  /** RegularExpression Id. */
  int LB = 32;
  /** RegularExpression Id. */
  int LC = 33;
  /** RegularExpression Id. */
  int LP = 34;
  /** RegularExpression Id. */
  int LT = 35;
  /** RegularExpression Id. */
  int LTT = 36;
  /** RegularExpression Id. */
  int RB = 37;
  /** RegularExpression Id. */
  int RC = 38;
  /** RegularExpression Id. */
  int RP = 39;
  /** RegularExpression Id. */
  int SEM = 40;
  /** RegularExpression Id. */
  int AT = 41;
  /** RegularExpression Id. */
  int DOL = 42;
  /** RegularExpression Id. */
  int DOT = 43;
  /** RegularExpression Id. */
  int UL = 44;
  /** RegularExpression Id. */
  int AND = 45;
  /** RegularExpression Id. */
  int COL = 46;
  /** RegularExpression Id. */
  int EQ = 47;
  /** RegularExpression Id. */
  int EQEQ = 48;
  /** RegularExpression Id. */
  int GEQ = 49;
  /** RegularExpression Id. */
  int GT = 50;
  /** RegularExpression Id. */
  int LEQ = 51;
  /** RegularExpression Id. */
  int NEQ = 52;
  /** RegularExpression Id. */
  int NOT = 53;
  /** RegularExpression Id. */
  int MINUS = 54;
  /** RegularExpression Id. */
  int OR = 55;
  /** RegularExpression Id. */
  int PLUS = 56;
  /** RegularExpression Id. */
  int Q = 57;
  /** RegularExpression Id. */
  int SLASH = 58;
  /** RegularExpression Id. */
  int STAR = 59;
  /** RegularExpression Id. */
  int IDENTIFIER = 60;
  /** RegularExpression Id. */
  int LETTER = 61;
  /** RegularExpression Id. */
  int DIGIT = 62;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<NUMBER>",
    "\"Product\"",
    "\"Documentation\"",
    "\"Version\"",
    "\"Slogan\"",
    "\"Description\"",
    "\"ChangeItems\"",
    "\"Author\"",
    "\"When\"",
    "\"LOB\"",
    "\"Productline\"",
    "\"Rule\"",
    "\"DataDictionary\"",
    "\"Coefficient\"",
    "\"Lagret\"",
    "\",\"",
    "\">>\"",
    "\"[\"",
    "\"{\"",
    "\"(\"",
    "\"<\"",
    "\"<<\"",
    "\"]\"",
    "\"}\"",
    "\")\"",
    "\";\"",
    "\"@\"",
    "\"$\"",
    "\".\"",
    "\"_\"",
    "\"&&\"",
    "\":\"",
    "\"=\"",
    "\"==\"",
    "\">=\"",
    "\">\"",
    "\"<=\"",
    "\"!=\"",
    "\"!\"",
    "\"-\"",
    "\"||\"",
    "\"+\"",
    "\"?\"",
    "\"/\"",
    "\"*\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}
